"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=u(t),m=a,g=s["".concat(c,".").concat(m)]||s[m]||y[m]||o;return t?r.createElement(g,i(i({ref:n},p),{},{components:t})):r.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[s]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},76647:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const o={},i="Input Manager",l={type:"mdx",permalink:"/flow/",source:"@site/pages/index.md",title:"Input Manager",description:"Handle your game controlls very easily. Combine keys and gamepads.",frontMatter:{}},c=[{value:"Example",id:"example",level:2},{value:"Custom Inputs",id:"custom-inputs",level:2}],u={toc:c},p="wrapper";function s(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"input-manager"},"Input Manager"),(0,a.kt)("p",null,"Handle your game controlls very easily. Combine keys and gamepads."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'local InputManager = require(InputManager)\n\n--VerticlePositiveKeys = {Enum.KeyCode.W,Enum.KeyCode.DPadUp,Enum.KeyCode.Up,Enum.KeyCode.Thumbstick1,Enum.KeyCode.Thumbstick2,Enum.UserInputType.MouseMovement}\nVerticlePositiveKeys = {InputManager.Info.NewKey(Enum.KeyCode.W,1,Enum.Axis.Y),Enum.KeyCode.Thumbstick1,Enum.UserInputType.MouseButton1}\nVerticleNegativeKeys = {Enum.UserInputType.MouseWheel,InputManager.Info.NewKey(Enum.KeyCode.S,1,Enum.Axis.Y)}\n\nlocal VerticleKeys = InputManager.Convert.TablesToKeys(VerticlePositiveKeys,VerticleNegativeKeys)\nlocal VerticleInfo = InputManager.Info.NewAction(\n    "Verticle",\n    VerticleKeys,\n    false, -- invert\n    3, -- type\n    Enum.Axis.Y -- axis\n)\n\nlocal VerticleManager = InputManager.NewManager(VerticleInfo)\n\nVerticleManager.Triggers.Began:Enable()\nVerticleManager.Triggers.Began:Connect(function(Key)\n    print("BEGAN:",VerticleManager.Value,Key)\nend)\n\nVerticleManager.Triggers.Ended:Enable()\nVerticleManager.Triggers.Ended:Connect(function(Key)\n    print("ENDED:",VerticleManager.Value,Key)\nend)\n\nVerticleManager.Triggers.Changed:Enable()\nVerticleManager.Triggers.Changed:Connect(function(Key)\n    print("CHANGED:",VerticleManager.Value,Key)\nend)\n')),(0,a.kt)("h2",{id:"custom-inputs"},"Custom Inputs"),(0,a.kt)("p",null,"Currently being developed"))}s.isMDXComponent=!0}}]);